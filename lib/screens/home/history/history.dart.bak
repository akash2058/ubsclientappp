import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'package:ubsclient/models/photo.dart';
import 'dart:convert';

class PhotoPage extends StatelessWidget {
  const PhotoPage({Key? key}) : super(key: key);

  Future<List<Photo>> getPhotoData() async {
    try {
      List<Photo> photo = [];
      final response = await http.get(
        Uri.parse('https://jsonplaceholder.typicode.com/photos'),
      );
      var responseData = jsonDecode(response.body);

      if (response.statusCode == 200) {
        for (int i = 0; i < responseData.length; i++) {
          Photo temp = Photo.fromJson(responseData[i]);
          photo.add(temp);
        }
        return photo;
      } else {
        return photo;
      }
    } catch (error) {
      rethrow;
    }
  }

  @override
  Widget build(BuildContext context) {
    return Container(
      color: Colors.amberAccent,
      child: FutureBuilder(
        future: getPhotoData(),
        builder: (context, snapshot) {
          if (snapshot.hasError) {
            return Text(snapshot.error.toString());
          }

          if (snapshot.hasData) {
            List<Photo> photos = snapshot.data!;

            return ListView.builder(
                itemCount: photos.length,
                itemBuilder: (context, index) {
                  return Container(
                    color: Colors.orange,
                    padding: const EdgeInsets.symmetric(
                        vertical: 10, horizontal: 30),
                    margin: const EdgeInsets.all(20),
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      children: [
                        Image.network(
                          photos[index].thumbnailUrl,
                          width: 200,
                        ),
                        Text('album id: ${photos[index].albumId}',
                            maxLines: 2,
                            style: const TextStyle(
                              fontSize: 14,
                            )),
                        Text('id: ${photos[index].id}',
                            maxLines: 2,
                            style: const TextStyle(
                              fontSize: 14,
                            )),
                        Text('title: ${photos[index].title}',
                            maxLines: 2,
                            style: const TextStyle(
                              fontSize: 14,
                            )),
                        Text('url: ${photos[index].url}',
                            maxLines: 2,
                            style: const TextStyle(
                              fontSize: 14,
                            )),
                        Text('thumbnailUrl: ${photos[index].thumbnailUrl}',
                            maxLines: 2,
                            style: const TextStyle(
                              fontSize: 14,
                            )),
                      ],
                    ),
                  );
                });
          } else {
            return const Center(
              child: CircularProgressIndicator(),
            );
          }
        },
      ),
    );
  }
}
